resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true # actuator 을 통해 circuitbreaker 상태를 확인하기 위해 설정
        #        slidingWindowType: COUNT_BASED # default 가 COUNT_BASED
        #        slidingWindowType: TIME_BASED # default 가 COUNT_BASED
        slidingWindowSize: 10 # 서킷의 상태가 CLOSED 일 때 요청의 결과를 기록하기 위한 슬라이딩 윈도의 크기
        permittedNumberOfCallsInHalfOpenState: 5 # half-open 상태에서 허가되는 요청 수. 이 수만큼 요청을 받고 다시 open이 되거나 close가 된다.
        waitDurationInOpenState: 10000 # 서킷의 상태가 open 에서 half-open 으로 변경되기 전에 circuitbreaker 가 기다리는 시간 (ms)
        failureRateThreshold: 50 # 에러 비율. 해당 값 이상으로 에러 발생시 서킷 open
        eventConsumerBufferSize: 10
        slowCallDurationThreshold: 5000 # 요청이 느린 것으로 간주하는 시간 (ms)
        slowCallRateThreshold: 80 # 지연된 응답 threshold %

      someShared:
        #        slidingWindowSize: 50
        #        permittedNumberOfCallsInHalfOpenState: 10
        registerHealthIndicator: true # actuator 을 통해 circuitbreaker 상태를 확인하기 위해 설정
        #        slidingWindowType: COUNT_BASED # default 가 COUNT_BASED
        #        slidingWindowType: TIME_BASED # default 가 COUNT_BASED
        slidingWindowSize: 5 # 서킷의 상태가 CLOSED 일 때 요청의 결과를 기록하기 위한 슬라이딩 윈도의 크기
        permittedNumberOfCallsInHalfOpenState: 5 # half-open 상태에서 허가되는 요청 수. 이 수만큼 요청을 받고 다시 open이 되거나 close가 된다.
        waitDurationInOpenState: 10000 # 서킷의 상태가 open 에서 half-open 으로 변경되기 전에 circuitbreaker 가 기다리는 시간 (ms)
        failureRateThreshold: 20 # 에러 비율. 해당 값 이상으로 에러 발생시 서킷 open
        eventConsumerBufferSize: 10
        slowCallDurationThreshold: 5000 # 요청이 느린 것으로 간주하는 시간 (ms)
        slowCallRateThreshold: 80 # 지연된 응답 threshold %

    instances:
      backendA:
        baseConfig: default
        #          timeoutDuration: 2000
        cancelRunningFuture: true
      backendB:
        baseConfig: someShared
      backendC:
        baseConfig: default
        #          timeoutDuration: 2000
        cancelRunningFuture: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always # actuator 에서 디테일한 정보들을 확인
  health:
    circuitbreakers:
      enabled: true # actuator 를 통해 circuitbreaker 상태를 확인


api:
  request-url: http://localhost:9090
